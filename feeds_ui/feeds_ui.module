<?php

/**
 * @file
 */

/**
 * Implements hook_help().
 */
function feeds_ui_help($path, $arg) {
  switch ($path) {
    case 'admin/structure/feeds':
      $output = '<p>' . t('Create one or more Feed importers for pulling content into Drupal. You can use these importers from the <a href="@import">Import</a> page or - if you attach them to a content type - simply by creating a node from that content type.', array('@import' => url('import'))) . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function feeds_ui_menu() {
  $items = array();
  $items['admin/structure/feeds'] = array(
    'title' => 'Feeds importers',
    'description' => 'Configure one or more Feeds importers to aggregate RSS and Atom feeds, import CSV files or more.',
    'route_name' => 'feeds_importer_list',
  );
  $items['admin/structure/feeds/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/structure/feeds/add'] = array(
    'route_name' => 'feeds_importer_add',
    'type' => MENU_SIBLING_LOCAL_TASK,
  );
  $items['admin/structure/feeds/manage/%feeds_importer'] = array(
    'title callback' => 'feeds_importer_title',
    'title arguments' => array(4),
    'route_name' => 'feeds_importer',
  );
  $items['admin/structure/feeds/manage/%feeds_importer/%'] = array(
    'title callback' => 'feeds_importer_title',
    'title arguments' => array(4),
    'route_name' => 'feeds_importer_active',
  );
  $items['admin/structure/feeds/manage/%feeds_importer/%/%'] = array(
    'title callback' => 'feeds_importer_title',
    'title arguments' => array(4),
    'route_name' => 'feeds_importer_active_plugin',
  );
  $items['admin/structure/feeds/manage/%feeds_importer/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  $items['admin/structure/feeds/manage/%feeds_importer/delete'] = array(
    'title' => 'Delete',
    'route_name' => 'feeds_importer_delete',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_NONE,
    'weight' => 4,
  );

  return $items;
}

/**
 * Implements hook_local_actions().
 */
function feeds_ui_local_actions() {
  return array(
    array(
      'route_name' => 'feeds_importer_add',
      'title' => t('Add importer'),
      'appears_on' => array(
        'feeds_importer_list',
      ),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function feeds_ui_theme() {
  return array(
    'feeds_mapping_form' => array(
      'render element' => 'form',
      'file' => 'feeds_ui.theme.inc',
    ),
    'feeds_ui_edit_page' => array(
      'variables' => array('info' => NULL, 'active' => NULL),
      'file' => 'feeds_ui.theme.inc',
    ),
    'feeds_plugin_form' => array(
      'render element' => 'form',
      'file' => 'feeds_ui.theme.inc',
    ),
    'feeds_ui_container' => array(
      'variables' => array('container' => NULL),
      'file' => 'feeds_ui.theme.inc',
    ),
  );
}
